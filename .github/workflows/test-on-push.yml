name: test-on-push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install poetry 1.1.13
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry==1.1.13

    - name: Install dependencies
      shell: bash
      run:  |
        python -m poetry install

    - name: Check formatting with black
      run: |
        python -m poetry run black --check --diff $(git ls-files "*.py")

  schema:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: jing trang
        version: 1.0
    - name: Make sure Schema rnc and rng files in sync via TRANG
      run: |
        trang ./schema/project-ptx.rnc ./tmp-project-ptx.rng
        cmp ./schema/project-ptx.rng ./tmp-project-ptx.rng
    - name: Verify template `project.ptx` match schema via JING
      run: |
        for i in $(find ./templates -name "project.ptx"); do jing ./schema/project-ptx.rng "$i"; done

  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        poetry-version: ['1.1.13']
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry ${{ matrix.poetry-version }}
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry==${{ matrix.poetry-version }}

    - name: View poetry --help
      run: poetry --help

    - name: Install dependencies
      shell: bash
      run:  |
        python -m poetry install
        python -m poetry run python scripts/fetch_core.py
        python -m poetry run python scripts/zip_templates.py

    - name: Test with pytest
      run: |
        python -m poetry run pytest -v
