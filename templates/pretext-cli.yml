# <!-- Managed automatically by PreTeXt authoring tools -->
# (delete the above line to manage this file manually)

name: PreTeXt-CLI Actions
on:
    # Runs on pull requests
    pull_request:
        branches: ["*"]
    # Runs on pushes to main
    push:
        branches: ["main"]
    # Runs on demand
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        container: oscarlevin/pretext:full

        steps:
            - name: Checkout source
              uses: actions/checkout@v4

            - name: install deps
              run: pip install -r requirements.txt

            - name: build deploy_targets
              run: pretext build --deploy-targets
            - name: stage deployment
              run: pretext deploy --stage-only

            - name: Bundle output/stage as artifact
              uses: actions/upload-artifact@v4
              with:
                  name: deploy
                  path: output/stage

    # only runs if Cloudflare secrets are set in the GitHub repo
    deploy-cloudflare:
        runs-on: ubuntu-latest
        needs: build
        env: 
            CLOUDFLARE_PROJECT_NAME: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
        if: ${{ env.CLOUDFLARE_PROJECT_NAME != '' }}

        steps:
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: deploy
                  path: deploy
            - name: Create 404.html
              run: echo "404 page not found" >> deploy/404.html
            - name: Publish to Cloudflare
              uses: cloudflare/pages-action@v1
              with:
                  apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
                  projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
                  directory: deploy
                  gitHubToken: ${{ secrets.GITHUB_TOKEN }}

    # This job deploys the artifact built in the previous job to Github pages.
    # Only triggers on main branch
    deploy-ghpages:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'
        needs: build
        permissions:
            contents: read
            pages: write
            id-token: write
        concurrency:
            group: "page"
            cancel-in-progress: false
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        steps:
            - name: Download website artifact
              uses: actions/download-artifact@v4
              with:
                  name: deploy
                  path: deploy
            - name: Setup Pages
              uses: actions/configure-pages@v4
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: deploy
            - name: Deploy to Github Pages
              id: deployment
              uses: actions/deploy-pages@v4
